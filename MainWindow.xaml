<Window x:Class="VRDeclutter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="VROrganizer Settings" Width="300"
        ResizeMode="NoResize"
        MouseDown="MainWindow_OnMouseDown"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Activated="MainWindow_OnActivated"
        Deactivated="MainWindow_OnDeactivated"
        Loaded="MainWindow_OnLoaded"
        Topmost="True"
        Closing="Window_Closing"
        SizeToContent="Height"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <!--Steam Style Buttons-->
        <LinearGradientBrush x:Key="ButtonNormalBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#434953" Offset="0" />
            <GradientStop Color="#33383E" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#535A67" Offset="0" />
            <GradientStop Color="#33383E" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ButtonPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#2B2E34" Offset="0" />
            <GradientStop Color="#33373C" Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="#C8D0DC" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="FontWeight" Value="Thin" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Width" Value="95" />
            <Setter Property="Height" Value="25" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Steam Style Separators-->
        <LinearGradientBrush x:Key="SeparatorGradientBrush" StartPoint="0,0.5" EndPoint="1,0.5">
            <GradientStop Color="#4B535C" Offset="0.0" />
            <GradientStop Color="#32373D" Offset="1.0" />
        </LinearGradientBrush>

        <Style TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{StaticResource SeparatorGradientBrush}" />
        </Style>

        <!--Steam Style Checkboxes-->
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="Transparent"
                                   SnapsToDevicePixels="true" StrokeThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#F1F1F1" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="Transparent" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#666666" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark"
                              Data="M0,7V3c.54.47,2.87,2.52,3.48,3.07C5.42,4.09,7.91,2.14,10,0V4C8.13,5.82,5.38,8.23,3.51,10q-.93-.78-1.86-1.59C1.09,8,.54,7.48,0,7Z"
                              Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None" />
                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}"
                                   Margin="2" Opacity="0" />
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="true">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                    <Setter Property="Padding" Value="4,-1,0,0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="checkBoxBorder"
                            Value="{StaticResource OptionMark.Disabled.Background}" />
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                            Value="{StaticResource OptionMark.Disabled.Border}" />
                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                    <Setter Property="Fill" TargetName="indeterminateMark"
                            Value="{StaticResource OptionMark.Disabled.Glyph}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#A8ACB3" />
            <Setter Property="Template" Value="{DynamicResource CheckBoxTemplate}" />
        </Style>

        <!--Steam Style ComboBoxes-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="Transparent" SnapsToDevicePixels="true"
                                   StrokeThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.MenuBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#383C44" Offset="0" />
            <GradientStop Color="#2C3036" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0" />
            <GradientStop Color="#FFC4E0FC" Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ButtonNormalBackgroundBrush}"
                                BorderThickness="0" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" HorizontalAlignment="Right" Margin="0"
                                    SnapsToDevicePixels="true" Width="auto">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="1">
                                    <Separator Background="#7C7C7C"
                                               Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                    <Path x:Name="arrow" Data="M0 0 4.5 5 9 0 0 0" Fill="#AFADAD"
                                          HorizontalAlignment="Center" Margin="3 3 5 0" VerticalAlignment="Center">
                                        <Path.RenderTransform>
                                            <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                        </Path.RenderTransform>
                                    </Path>
                                </StackPanel>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                <Setter Property="Background" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                               Value="true" />
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                <Setter Property="Background" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                <Setter Property="Fill" TargetName="arrow" Value="#E4E3DB" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                <Setter Property="Background" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition
                        MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
                                            VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}"
                        Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                             Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect"
                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter Property="Canvas.Left" TargetName="opaqueRect"
                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition
                        MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="1" Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimation}}">
                    <Grid Background="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{StaticResource ComboBox.MenuBackground}"
                                Margin="0 1 0 0">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
                                            VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <ContentPresenter x:Name="contentPresenter"
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect"
                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter Property="Canvas.Left" TargetName="opaqueRect"
                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="24" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Foreground" Value="#C8D0DC" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#A8ACB3" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="3" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Border x:Name="WindowBorder" BorderBrush="#3E3E3E" BorderThickness="1" CornerRadius="8" Margin="20">
            <Border.Effect>
                <DropShadowEffect BlurRadius="30" Direction="-90" ShadowDepth="1" Opacity="0.4" />
            </Border.Effect>

            <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#23272C" Offset="-0.1" />
                    <GradientStop Color="#2A2E33" Offset="0.15" />
                </LinearGradientBrush>
            </Border.Background>

            <StackPanel>
                <!--TitleBar-->
                <TextBlock x:Name="WindowTitle" Foreground="#D5D9EA" Margin="8 8 0 10" FontFamily="Arial"
                           FontSize="11" Text="VRO" />

                <!--Options-->
                <StackPanel Orientation="Vertical" VerticalAlignment="Top" Margin="5 0 5 5">
                    <CheckBox x:Name="StartupChkBox" Content="Run on Startup" Margin="5" />
                    <CheckBox x:Name="DockChkBox" Content="Dock Window to Tray" Margin="5" />
                    <CheckBox x:Name="SteamVRClsChkBox" Content="Close all with SteamVR" Margin="5" />

                    <Separator Margin="0 10 0 10" />

                    <StackPanel>
                        <TextBlock Foreground="#C8D0DC" Margin="0 0 5 3" FontFamily="Arial" Text="SteamVR"
                                   FontSize="11" VerticalAlignment="Center" />
                        <ComboBox x:Name="SteamVRComboBox" Width="auto" />
                    </StackPanel>

                    <StackPanel Margin="0 8 0 0">
                        <TextBlock Foreground="#C8D0DC" Margin="0 0 0 3" FontFamily="Arial" Text="WMR"
                                   FontSize="11" VerticalAlignment="Center" />
                        <ComboBox x:Name="WMRComboBox" Width="auto" />
                    </StackPanel>

                    <StackPanel Margin="0 8 0 0">
                        <TextBlock Foreground="#C8D0DC" Margin="0 0 0 3" FontFamily="Arial" Text="Oculus"
                                   FontSize="11" VerticalAlignment="Center" />
                        <ComboBox x:Name="OculusComboBox" Width="auto" />
                    </StackPanel>

                    <StackPanel Margin="0 8 0 0">
                        <TextBlock Foreground="#C8D0DC" Margin="0 0 5 0" FontFamily="Arial" Text="OVR Toolkit"
                                   FontSize="11" VerticalAlignment="Center" />
                        <ComboBox x:Name="OVRToolkitComboBox" Width="auto" />
                    </StackPanel>

                    <StackPanel Margin="0 8 0 0">
                        <TextBlock Foreground="#C8D0DC" Margin="0 0 0 3" FontFamily="Arial" Text="SlimeVR"
                                   FontSize="11" VerticalAlignment="Center" />
                        <ComboBox x:Name="SlimeVRComboBox" Width="auto" />
                    </StackPanel>

                    <StackPanel Margin="0 8 0 0">
                        <TextBlock Foreground="#C8D0DC" Margin="0 0 0 3" FontFamily="Arial" Text="KinectToVR"
                                   FontSize="11" VerticalAlignment="Center" />
                        <ComboBox x:Name="K2VRComboBox" Width="auto" />
                    </StackPanel>
                </StackPanel>

                <!--Buttons-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                            Margin="5">
                    <Button x:Name="OkBtn" Click="OkBtn_OnClick" Content="APPLY" />

                    <Button x:Name="CancelBtn" Click="CancelBtn_OnClick" Content="CLOSE" />
                </StackPanel>
            </StackPanel>
        </Border>
    </Grid>
</Window>